// Generated by CoffeeScript 1.9.1
(function() {
  var Marvin, Robot, marvin,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Robot = (function() {
    function Robot() {}

    Robot.prototype.makeTea = function() {
      return console.log('Making tea.');
    };

    return Robot;

  })();

  Marvin = (function(superClass) {
    extend(Marvin, superClass);

    function Marvin() {
      return Marvin.__super__.constructor.apply(this, arguments);
    }

    Marvin.prototype.makeTea = function() {
      console.log('I have a brain the size of a planet');
      return Marvin.__super__.makeTea.apply(this, arguments);
    };

    return Marvin;

  })(Robot);

  marvin = new Marvin;

  marvin.makeTea();

}).call(this);
